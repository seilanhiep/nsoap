---
title: ""
subtitle: ""
date: ""
author: ""
abstract: ""
abstract-title: ""
format:
  html:
    toc: true
    toc-depth: 3
    toc-title: Table of Contents
    number-sections: true
    number-depth: 3
    dpi: 300
    self-contained: TRUE #FALSE  TRUE
    highlight-style: github # arrow, pygments, tango, espresso, zenburn, kate, monochrome, breezedark, haddock, atom-one, ayu, breeze, dracula, github, gruvbox, monokai, nord, oblivion, printing, radical, solarized, vim

execute:
  echo: false
  warning: false
editor: visual
---

```{r}
source("main-script.R")
source("Write-excel.R")
```

# Infrastructure

## beds

```{r}
cpa2.tbeds = bed.infor %>% 
  filter(geninfo_hcfacilitytype == "CPA2") %>% 
  group_by(type) %>% 
  summarise(value = sum(values, na.rm = TRUE))

all.plot(cpa2.tbeds, 
         reorder(type,value),value,'', 
         "All bed-related infrastructure", 
         "Total number",
         "")
```

### by province

```{r}
cpa2.tbeds.province = bed.infor %>% 
  filter(geninfo_hcfacilitytype == "CPA2") %>% 
  group_by(geninfo_province, type) %>% 
  summarise(value = sum(values, na.rm = TRUE), .groups = "drop_last")

group_ggplot(cpa2.tbeds.province, 
             geninfo_province,value,type, 
             "Bed-related infrastructure", 
             "in number by province",
             "",
             'none')
```

## Main score

```{r}
cpa2.mainscore = data.infra %>% 
  filter(geninfo_hcfacilitytype == "CPA2") %>% 
  group_by(main.structure) %>% 
  summarise( number = n(),
             total_value = sum(nscale, na.rm = TRUE), .groups = 'drop' ) %>% 
  mutate(score = round((total_value/(number *5))*100, digits = 2),
         gaps = 100-score)%>% 
  select(-c(number, total_value))

plot_score(cpa2.mainscore %>% 
             pivot_longer(!c(main.structure), names_to = "type", values_to = "value") %>% 
             mutate(main.structure = factor(str_to_sentence(
               str_replace_all(main.structure,  c("\\." = " ", "scale" = ""))),
               levels = factor_main)),
           main.structure, value, type, 
           "Score of each main infrastructure",
           "% of its main structure")
```

## sub main score

```{r}
cpa2.submainscore = data.infra %>% 
  filter(geninfo_hcfacilitytype == "CPA2") %>%
  group_by(main.structure, sub.structure) %>% 
  summarise( number = n(),
             total_value = sum(nscale, na.rm = TRUE), .groups = 'drop' ) %>% 
  mutate(score = round((total_value/(number *5))*100, digits = 2),
         gaps = 100-score,
         sub.structure =  str_to_sentence(str_replace_all( sub.structure, c("\\." = " "))))%>% 
  select(-c(number, total_value))
```

### OR Equipement and Supplies

```{r}
pcpa2.submainscore = cpa2.submainscore %>%
  pivot_longer(-c(main.structure,sub.structure), names_to = "type", values_to = "value")
```

### Operating room equipment and supplies

```{r}
plot_score(pcpa2.submainscore %>% 
             filter(main.structure %in% factor_main[6]),
           sub.structure, value, type, 
           "Score of operation room equipment and supplies", 
           "where are the problem occurred at sub-domain?")
```

### Laboratory

```{r}
plot_score(pcpa2.submainscore %>% 
             filter(main.structure %in% factor_main[7]),
           sub.structure, value, type, 
           "Score of laboratory", 
           "where are the problem occurred at sub-domain?")
```

### Radiology

```{r}
plot_score(pcpa2.submainscore %>% 
             filter(main.structure %in% factor_main[9]), 
           sub.structure, value, type, 
           "Score of radiology", 
           "where are the problem occurred at sub-domain?")
```

### Pharmacy

```{r}
plot_score(pcpa2.submainscore %>% 
               filter(main.structure %in% factor_main[10]),
             sub.structure, value, type, 
             "Score of pharmacy", 
             "where are the problem occurred at sub-domain?")
```

## infrastructure by scale

```{r}
cpa2.mainscale = data.infra %>% 
    filter(geninfo_hcfacilitytype == "CPA2") %>%
    group_by(main.structure, scale) %>% 
    summarise(number = n(), .groups = 'drop_last') %>% 
    mutate(percent = round((number / sum(number, na.rm = TRUE) * 100), digits = 1),
           main.structure = factor(str_to_sentence(
             str_replace_all(main.structure,  c("\\." = " ", "scale" = ""))),
             levels = factor_main),
           scale = factor(scale, levels = factor_scale)) %>% 
    filter(scale != "NA", !is.na(main.structure))

group_ggplot(cpa2.mainscale %>% 
                 filter(main.structure != "Access and referral systems"),
               main.structure,percent,scale, 
               "Scale of each main infrastructure", 
               "by default, the scale is in rank.",
               "",
               'none')
```

### by province

```{r}
cpa2.mainscale.province = data.infra %>% 
  filter(geninfo_hcfacilitytype == "CPA2") %>% 
  group_by(geninfo_province,main.structure,scale) %>% 
  summarise(number = n(), .groups = 'drop_last') %>% 
  mutate(score = round(number/sum(number, na.rm = TRUE)*100, digits = 2),
         gaps = 100-score) %>% 
  filter(scale == "Always") %>%
  select(-c(number,scale)) %>% 
  pivot_longer(-c(geninfo_province, main.structure), names_to = "type", values_to = "value")
```

#### Electricity, Water, Oxygen, Internet, blood

```{r}
group_ggplot(cpa2.mainscale.province %>% 
               filter(type == "score",
                      main.structure %in% factor_main[c(11:14,8)],
                      !is.na(main.structure)), 
             geninfo_province,value,main.structure, 
             "Fully-functioning Electricity, Water, Oxygen, Internet", 
             "% of hospitals answering Always by province",
             "",
             'none')
```

#### Operation room equipment and supplies, Laboratory, Radiology and Pharmacy

```{r}
group_ggplot(cpa2.mainscale.province %>% 
               filter(type == "score",
                      main.structure %in% factor_main[c(6,7,9,10)],
                      !is.na(main.structure)), 
             geninfo_province,value,main.structure, 
             "Fully-functioning OR equipment and supplies/Laboratory/Radiology/Pharmacy", 
             "% of hospitals answering Always by province",
             "",
             'none')
```

#### Other

```{r}
group_ggplot(cpa2.mainscale.province %>% 
               filter(type == "score",
                      main.structure %in% factor_main[c(1:4)],
                      !is.na(main.structure)), 
             geninfo_province,value,main.structure, 
             "Fully-functioning general infrastructure", 
             "% of hospitals answering Always by province",
             "",
             'none')
```

## Infrastructure readiness

```{r}
tcpa2.infra_readiness = infastruct.readiness %>%  
  filter(geninfo_hcfacilitytype == "CPA2") %>%
  group_by(readiness) %>% 
  summarise(number = n(), .groups = "drop_last") %>% 
  mutate(infra.readiness = round(number/sum(number)*100, digits = 2),
         readiness = factor(readiness, levels = rev(factor_readiness)))

all.plot(tcpa2.infra_readiness %>% 
           mutate(readiness = factor(readiness, levels = factor_readiness)),
         readiness,infra.readiness,readiness, 
         "Infrastructure readiness", 
         "",
         "")
```

### Infrastructure by its types

```{r}
cpa2.infra_readiness = infastruct.readiness %>%  
  filter(geninfo_hcfacilitytype == "CPA2") %>%
  group_by(type,readiness) %>% 
  summarise(number = n(), .groups = "drop_last") %>% 
  mutate(infra.readiness = round(number/sum(number)*100, digits = 2),
         readiness = factor(readiness, levels = rev(factor_readiness)))

leg.all.plot(cpa2.infra_readiness %>% 
               mutate(readiness = factor(readiness, levels = factor_readiness)),
             type,infra.readiness,readiness,
             "Infrastructure full availability",
             "in percent","","top")
```

### by province

```{r}
cpa2.infra_readiness.province = infastruct.readiness %>%  
  filter(geninfo_hcfacilitytype == "CPA2") %>%
  group_by(geninfo_province, readiness) %>% 
  summarise(number = n(), .groups = "drop_last") %>% 
  mutate(infra.readiness = round(number/sum(number)*100, digits = 2),
         readiness = factor(readiness, levels = rev(factor_readiness)))

group_ggplot(cpa2.infra_readiness.province %>% 
               mutate(readiness = factor(readiness, levels = rev(factor_readiness))), 
             geninfo_province,infra.readiness,readiness, 
             "Hospital facility answering (Always-100%)", 
             "% of hostipal facility readiness by province",
             "",
             'none')
```

# Referral Hospital Workforce

```{r}
cpa2.wforce = wforce %>% 
  filter(geninfo_hcfacilitytype == "CPA2") %>% 
  group_by(workforces) %>%
  summarise(number = n(),
            tvalue = sum(values, na.rm = TRUE), .groups = 'drop_last') %>%
  mutate(percent = round(tvalue / sum(tvalue, na.rm = TRUE) * 100, digits = 2))
all.plot(cpa2.wforce, 
             fct_rev(workforces),tvalue,'',
             "Density of Workforce", 
             "in total",
             "")
```

## by province

```{r}
cpa2.twforce.province = wforce %>% 
  filter(geninfo_hcfacilitytype == "CPA2") %>% 
  group_by(geninfo_province) %>% 
  summarise(value = sum(values, na.rm = TRUE), .groups = "drop_last")

group_ggplot(cpa2.twforce.province, 
             geninfo_province,value,'', 
             "Bed-related infrastructure", 
             "in number by province",
             "",
             'none')
```

## by province and type

```{r}
cpa2.wforce.province = wforce %>% 
  filter(geninfo_hcfacilitytype == "CPA2") %>% 
  group_by(geninfo_province, workforces) %>%
  summarise(number = n(),
            tvalue = sum(values, na.rm = TRUE), .groups = 'drop_last') %>%
  mutate(percent = round(tvalue / sum(tvalue, na.rm = TRUE) * 100, digits = 2))
```

### Specialist workforces

```{r}
group_ggplot(cpa2.wforce.province %>% 
               filter(workforces %in% c("Anaesthesiologists","General surgeons","Obstetricians gynaecologists",
                                        "Paediatric surgeons")), 
             geninfo_province,tvalue,workforces, 
             "Surgeons/Obstetricians gynaecologists/Anaesthesiologists/Pediatric", 
             "in number by province",
             "",
             'none')
```

### General doctors/Medical officers/Nurses

```{r}
group_ggplot(cpa2.wforce.province %>% 
               filter(workforces %in% c("General doctors providing surgery","General doctors providing anesthesia",
                                        "Medical officers providing surgery","Medical officers providing anesthesia",
                                        "Nurses providing surgery","Nurses providing anesthesia")) %>% 
               mutate(workforces = str_wrap(workforces, width = 20)), 
             geninfo_province,tvalue,workforces, 
             "General doctors/Medical officers/Nurses", 
             "in number by province",
             "",
             'none')
```

### Allied health providers

```{r}
group_ggplot(cpa2.wforce.province %>% 
               filter(workforces %in% c("Midwives","Midwives on labour and delivery",
                                        "Radiologists","Pathologists","Pharmacists","Biomedical technicians",
                                        "Other related surgery obstetric and anesthesia")) %>% 
               mutate(workforces = str_wrap(workforces, width = 20)), 
             geninfo_province,tvalue,workforces, 
             "Allied health providers", 
             "in number by province",
             "",
             'none')
```

### Workforce ratio per 100,000 population

```{r}
cpa2.wfperpop = left_join(cpa2.twforce.province, province, by = c("geninfo_province" = "Provinces")) %>% 
  mutate(`workforce per 100,000 population` = round((value/Total)*100000 ,digits = 0)) %>% 
  select(1,`Workforces` = 2,`Catchment population`= 5,6)

group_ggplot(cpa2.wfperpop %>% 
               pivot_longer(-c(1), names_to = "type", values_to = "values"),
             geninfo_province,values,type, 
             "Workforces and ratio per 100,000 population", 
             "distributed by province",
             "",
             'none')
```

# Density workforces per 100,000 population

```{r}
cpa2.wf.capita = cpa2.wforce %>%
  mutate(specialist_flag = if_else(row_number() %in% c(1,5,12,15), tvalue, 0)) %>%
  summarise( specialist_wf = sum(specialist_flag, na.rm = TRUE),
             total_workforce = sum(tvalue, na.rm = TRUE)) %>%
  pivot_longer(cols = everything(), names_to = "type", values_to = "tvalue") %>% 
  mutate( sdcapita = round(tvalue / province$Total[nrow(province)] * 100000, digits = 0),
          score = (25 - sdcapita))
```

## Specialist Workforces

::: {layout="[50,50]"}
```{r}
value_box(
  title = HTML("Total specialist workforces"),
  value = sum(cpa2.wf.capita$tvalue[1], na.rm = TRUE),
  showcase = fa_i("bed", style = "font-size: 3em; color: #0d6efd;"),
  theme = "warning")
```

```{r}
value_box(
  title = HTML("Specialist workforces per 100,000 population"),
  value = sum(cpa2.wf.capita$sdcapita[1], na.rm = TRUE),
  showcase = fa_i("gavel", style = "font-size: 3em; color: #0d6efd;"),
  theme = "red")
```
:::

## All Workforces

::: {layout="[50,50]"}
```{r}
value_box(
  title = HTML("Total workforces"),
  value = sum(cpa2.wf.capita$tvalue[2], na.rm = TRUE),
  showcase = fa_i("bed", style = "font-size: 3em; color: #0d6efd;"),
  theme = "warning")
```

```{r}
value_box(
  title = HTML("Workforces per 100,000 population"),
  value = sum(cpa2.wf.capita$sdcapita[2], na.rm = TRUE),
  showcase = fa_i("gavel", style = "font-size: 3em; color: #0d6efd;"),
  theme = "red")
```
:::

# Referral Hospital Service Delivery

```{r}
cpa2.service = allinformation %>% 
  select(1:5,100:106, 112:118) %>% 
  pivot_longer(cols = -c(1:5), names_to = "type", values_to = "values") %>% 
  filter(geninfo_hcfacilitytype == "CPA2") %>% 
  group_by(type) %>%
  summarise(tvalue = sum(values, na.rm = TRUE), .groups = 'drop_last')

all.plot(cpa2.service, 
         reorder(type,tvalue),tvalue,'',
         "Service delivery", 
         "in total",
         "")
```

## by province

```{r}
cpa2.tservice.province = allinformation %>% 
  filter(geninfo_hcfacilitytype == "CPA2") %>% 
  group_by(geninfo_province) %>%
  summarise(tvalue = sum(`total surgical operation`, na.rm = TRUE), .groups = 'drop_last')

group_ggplot(cpa2.tservice.province, 
             geninfo_province,tvalue,'', 
             "Service delivery", 
             "in number by province",
             "",
             'none')
```

## by province and type

```{r}
cpa2.sdperpop = left_join(cpa2.tservice.province, province, by = c("geninfo_province" = "Provinces")) %>% 
  mutate(`workforce per 100,000 population` = round((tvalue/Total)*100000 ,digits = 0)) %>% 
  select(1,`surgical volumes` = 2,`Catchment population`= 5, `surgical volume per 100,000 population` = 6)

group_ggplot(cpa2.sdperpop %>% 
               pivot_longer(-c(1), names_to = "type", values_to = "values"),
             geninfo_province,values,type, 
             "Surgical volume and ratio per 100,000 population", 
             "distributed by province",
             "",
             'none')
```

# Density service delivery per 100,000 population

```{r}
cpa2.sd.capita = cpa2.service %>% 
  filter(type %in% c("total surgical operation","bellwether","total surgery","obstetrics gynaecology")) %>% 
  mutate(sdcapita = round(tvalue/province$Total[nrow(province)]*100000, digits = 0),
         score = (100-(round(5000-sdcapita, digits = 0)/5000 *100)))
```

## Total surgical operation

::: {layout="[50,50]"}
```{r}
value_box(
  title = HTML("Total surgical operation"),
  value = sum(cpa2.sd.capita$tvalue[4], na.rm = TRUE),
  showcase = fa_i("bed", style = "font-size: 3em; color: #0d6efd;"),
  theme = "warning")
```

```{r}
value_box(
  title = HTML("Total surgical operation per 100,000 population"),
  value = sum(cpa2.sd.capita$sdcapita[4], na.rm = TRUE),
  showcase = fa_i("gavel", style = "font-size: 3em; color: #0d6efd;"),
  theme = "red")
```
:::

## Total Bellwether procedure

::: {layout="[50,50]"}
```{r}
value_box(
  title = HTML("Total Bellwether procedure"),
  value = sum(cpa2.sd.capita$tvalue[1], na.rm = TRUE),
  showcase = fa_i("bed", style = "font-size: 3em; color: #0d6efd;"),
  theme = "warning")
```

```{r}
value_box(
  title = HTML("Total Bellwether procedure per 100,000 population"),
  value = sum(cpa2.sd.capita$sdcapita[1], na.rm = TRUE),
  showcase = fa_i("gavel", style = "font-size: 3em; color: #0d6efd;"),
  theme = "red")
```
:::
